# Generated by Django 5.1.1 on 2024-12-10 14:04

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Match",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "scheduled_date",
                    models.DateTimeField(
                        help_text="Fecha y hora programada para el partido"
                    ),
                ),
                (
                    "location",
                    models.CharField(
                        help_text="Ubicación donde se jugará el partido", max_length=255
                    ),
                ),
                (
                    "latitude",
                    models.FloatField(
                        blank=True,
                        help_text="Latitud para obtener información del clima",
                        null=True,
                    ),
                ),
                (
                    "longitude",
                    models.FloatField(
                        blank=True,
                        help_text="Longitud para obtener información del clima",
                        null=True,
                    ),
                ),
                (
                    "weather_info",
                    models.JSONField(
                        blank=True,
                        help_text="Información del clima en formato JSON",
                        null=True,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("upcoming", "Próximamente"),
                            ("live", "En Vivo"),
                            ("finished", "Finalizado"),
                            ("suspended", "Suspendido"),
                            ("rescheduled", "Reprogramado"),
                        ],
                        default="upcoming",
                        help_text="Estado actual del partido",
                        max_length=20,
                    ),
                ),
                (
                    "start_time",
                    models.DateTimeField(
                        blank=True,
                        help_text="Hora real de inicio del partido",
                        null=True,
                    ),
                ),
                (
                    "end_time",
                    models.DateTimeField(
                        blank=True,
                        help_text="Hora de finalización del partido",
                        null=True,
                    ),
                ),
                (
                    "team_a_sets_won",
                    models.PositiveIntegerField(
                        default=0, help_text="Número de sets ganados por el equipo A"
                    ),
                ),
                (
                    "team_b_sets_won",
                    models.PositiveIntegerField(
                        default=0, help_text="Número de sets ganados por el equipo B"
                    ),
                ),
                (
                    "team_a_timeouts",
                    models.PositiveIntegerField(
                        default=0, help_text="Tiempos fuera utilizados por el equipo A"
                    ),
                ),
                (
                    "team_b_timeouts",
                    models.PositiveIntegerField(
                        default=0, help_text="Tiempos fuera utilizados por el equipo B"
                    ),
                ),
            ],
            options={
                "verbose_name": "Partido",
                "verbose_name_plural": "Partidos",
                "ordering": ["-scheduled_date"],
            },
        ),
        migrations.CreateModel(
            name="PlayerPerformance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "points",
                    models.PositiveIntegerField(
                        default=0, help_text="Puntos anotados por el jugador"
                    ),
                ),
                (
                    "assists",
                    models.PositiveIntegerField(
                        default=0, help_text="Asistencias realizadas"
                    ),
                ),
                (
                    "blocks",
                    models.PositiveIntegerField(
                        default=0, help_text="Bloqueos efectivos"
                    ),
                ),
                (
                    "aces",
                    models.PositiveIntegerField(
                        default=0, help_text="Servicios directos"
                    ),
                ),
            ],
            options={
                "verbose_name": "Rendimiento de Jugador",
                "verbose_name_plural": "Rendimientos de Jugadores",
                "ordering": ["set", "player"],
            },
        ),
        migrations.CreateModel(
            name="Set",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "set_number",
                    models.PositiveIntegerField(
                        help_text="Número de set dentro del partido"
                    ),
                ),
                (
                    "team_a_points",
                    models.PositiveIntegerField(
                        default=0, help_text="Puntos anotados por el equipo A"
                    ),
                ),
                (
                    "team_b_points",
                    models.PositiveIntegerField(
                        default=0, help_text="Puntos anotados por el equipo B"
                    ),
                ),
                (
                    "completed",
                    models.BooleanField(
                        default=False, help_text="Indica si el set ha terminado"
                    ),
                ),
                (
                    "team_a_substitutions",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Número de sustituciones realizadas por el equipo A",
                    ),
                ),
                (
                    "team_b_substitutions",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Número de sustituciones realizadas por el equipo B",
                    ),
                ),
            ],
            options={
                "verbose_name": "Set",
                "verbose_name_plural": "Sets",
                "ordering": ["match", "set_number"],
            },
        ),
    ]
